---
- name: Pull necessary kubeadm images.
  ansible.builtin.command: kubeadm config images pull
  notify: 
    - Disconnect from any VPN Server that is already established.
    - Reload Network Manager.

- name: Force a handlre to execute.
  ansible.builtin.meta: flush_handlers

- name: Clear old Facts.
  ansible.builtin.meta: clear_facts

- ansible.builtin.gather_facts:
    parallel: false

- name: Kubeadm Init.
  block:
  - name:  Join to the existing cluster.
    ansible.builtin.command: |
      {% for item in (groups['control-plane']) %}
      {% set join = hostvars[item]['kubeadm_worker_join_command'].stdout %}
      {% set cert = hostvars[item]['kubeadm_certificate_key'].stdout.split('\n')[-1] %}
      {{ join }} --control-plane --certificate-key {{ cert }} --apiserver-advertise-address {{ ansible_default_ipv4.address }}
      {% endfor %}
    register: join_stderr

  rescue:
  - name: '[Errno 2] No such file or directory.'
    ansible.builtin.debug:
      msg: |
        The Kubeadm binary is not available.
        Either you skipped the 'Kubernetes Cluster Setup Playbook'.
        Or you point this Playbook against the wrong servers.
    when: "'No such file' in join_stderr.msg"

  always:
  - name: Change A thing.
    ansible.builtin.command: echo Hello World
    changed_when: true
    notify: 
      - Disconnect from any VPN Server that is already established.
      - Reload Network Manager.


- name: Create ".kube" if it does not exist.
  ansible.builtin.file:
    path: /home/{{ansible_ssh_user}}/.kube
    state: directory
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_user}}"
    mode: '0740'

- name: Copy "admin.conf" with owner and permissions.
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ansible_ssh_user}}/.kube/config
    remote_src: true
    owner: "{{ansible_ssh_user}}"
    group: "{{ansible_ssh_user}}"
